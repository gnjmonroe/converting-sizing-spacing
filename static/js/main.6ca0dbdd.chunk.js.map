{"version":3,"sources":["TitleEl.tsx","AboutEl.tsx","TitleBar.tsx","Label.tsx","UnitNum.tsx","RangeSlider.tsx","BaseSize.tsx","UnitModule.tsx","UnitBar.tsx","Tab.tsx","Text.tsx","SizeBlock.tsx","BlockBase.tsx","BlockHori.tsx","BlockVert.tsx","BlockDiag.tsx","SpaceBlockGroup.tsx","CanvasBlock.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["TitleEl","href","id","Component","AboutEl","TitleBar","className","Label","this","props","LabelText","UnitNum","unit","ModuleType","convert","type","placeholder","min","max","onKeyUp","React","RangeSlider","combine","onInput","BaseSize","updateBs","UnitModule","UnitBar","combineBs","convertPx","combinePx","convertEm","combineEm","convertPt","combinePt","convertPct","combinePct","Tab","clickFn","category","toLocaleLowerCase","active","onClick","Text","size","hidden","style","fontSize","SizeBlock","width","height","BlockBase","BlockHori","left","BlockVert","top","BlockDiag","sqSize","Math","sqrt","pow","Number","SpaceBlockGroup","CanvasBlock","tabText","clickFnText","tabSize","clickFnSize","tabSpac","clickFnSpac","contentText","contentSize","contentSpac","App","state","baseSize","pxValue","emValue","ptValue","pctValue","tabTextActive","tabSizeActive","tabSpacActive","contentTextHidden","contentSizeHidden","contentSpacHidden","updateBaseSize","document","getElementById","bs","value","px","setState","bsInput","bsSlider","pt","bsS","console","log","pxV","pxInput","pxSlider","em","emV","emInput","emSlider","ptV","ptInput","ptSlider","pct","pctV","pctInput","pctSlider","clickTabText","textGrab","sizingGrab","spacingGrab","textPreview","sizingPreview","spacingPreview","clickTabSize","clickTabSpac","prevState","baseInput","baseSlider","String","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.6ca0dbdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TitleEl extends Component {\r\n  render() {\r\n    return(\r\n      <a href='#'>\r\n        <h1 id='title-el'>ConvertingSizingSpacing</h1>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TitleEl;","import React, { Component } from 'react';\r\n\r\nclass AboutEl extends Component {\r\n  render() {\r\n    return(\r\n      <a href=\"#about\">\r\n        <h2 id='about-el' >About</h2>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutEl;","import React, { Component } from 'react';\r\nimport TitleEl from './TitleEl'\r\nimport AboutEl from './AboutEl'\r\nimport DarkModeEl from './DarkModeEl'\r\n\r\nclass TitleBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"title-bar\">\r\n        <TitleEl />\r\n        <AboutEl />\r\n        {/* <DarkModeEl /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TitleBar;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  LabelText: string,\r\n  unit: string\r\n};\r\n\r\nclass Label extends Component<MyProps> {\r\n  render() {\r\n    return(\r\n      <h3>{this.props.LabelText}</h3>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Label;","import * as React from 'react';\r\n\r\ntype MyProps = {\r\n  ModuleType: string,\r\n  unit: string,\r\n  convert?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  // onKeyUp?: (e: React.KeyboardEvent<HTMLInputElement>) => void,\r\n};\r\n\r\nclass UnitNum extends React.Component<MyProps> {\r\n  render() {\r\n    const { unit, ModuleType, convert } = this.props;\r\n\r\n    return(\r\n      <>\r\n        <input id={unit + 'Num'} className={\"unit-num \" + ModuleType} type=\"number\" placeholder={unit} min={0} max={10000} onKeyUp={convert} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UnitNum;","import * as React from 'react';\r\n// import * as ReactDOM from 'react-dom';\r\n\r\ntype MyProps = {\r\n  unit: string,\r\n  combine?: React.KeyboardEventHandler<HTMLInputElement>,\r\n}\r\n\r\nclass RangeSlider extends React.Component<MyProps> {\r\n  render() {\r\n    const { unit, combine } = this.props;\r\n\r\n    return(\r\n      <input id={unit + 'Slider'} className=\"r-slider\" type=\"range\" min={0} max={100} onInput={combine} /> \r\n    )\r\n  }\r\n}\r\n\r\nexport default RangeSlider;","import * as React from \"react\";\r\n// import * as ReactDOM from \"react-dom\";\r\nimport Label from './Label'\r\nimport UnitNum from './UnitNum'\r\nimport RangeSlider from './RangeSlider'\r\n\r\ntype MyProps = {\r\n  unit: string;\r\n  LabelText: string;\r\n  updatePx?: React.KeyboardEventHandler<HTMLInputElement>;\r\n  updateBs?: React.KeyboardEventHandler<HTMLInputElement>;\r\n  combine?: React.KeyboardEventHandler<HTMLInputElement>;\r\n  // onKeyUp?: object;\r\n}\r\n\r\nclass BaseSize extends React.Component<MyProps> {\r\n\r\n  render() {\r\n    const {unit, LabelText, updateBs, combine} = this.props \r\n    \r\n    return(\r\n      <div className=\"base-size\">\r\n        <Label unit={unit} LabelText={LabelText} />\r\n        <UnitNum unit={unit} ModuleType='base' convert={updateBs} />\r\n        <RangeSlider unit={unit} combine={combine} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BaseSize;","import * as React from 'react';\r\n// import * as ReactDOM from 'react-dom';\r\nimport Label from './Label'\r\nimport UnitNum from './UnitNum'\r\nimport Spinner from './Spinner'\r\nimport RangeSlider from './RangeSlider'\r\n\r\ntype MyProps = {\r\n  LabelText: string,\r\n  unit: string,\r\n  convert?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  combine?: React.KeyboardEventHandler<HTMLInputElement>,\r\n};\r\n\r\nclass UnitModule extends React.Component<MyProps> {\r\n  render() {\r\n    const {unit, LabelText, convert, combine} = this.props;\r\n\r\n    return(\r\n      <div className=\"unit-module\">\r\n        <Label unit={unit} LabelText={LabelText} />\r\n        <UnitNum unit={unit} ModuleType='unit' convert={convert} />\r\n        {/* <Spinner unit={unit} /> */}\r\n        <RangeSlider unit={unit} combine={combine} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UnitModule;","import * as React from 'react';\r\n// import * as ReactDOM from 'react-dom';\r\nimport BaseSize from './BaseSize'\r\nimport UnitModule from './UnitModule'\r\n\r\ntype MyProps = {\r\n  updateBs?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  combineBs?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  convertPx?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  convertEm?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  convertPt?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  convertPct?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  combinePx?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  combineEm?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  combinePt?: React.KeyboardEventHandler<HTMLInputElement>,\r\n  combinePct?: React.KeyboardEventHandler<HTMLInputElement>,\r\n}\r\n\r\nclass UnitBar extends React.Component<MyProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"unit-bar\">\r\n        <BaseSize unit='base' LabelText='base size' updateBs={this.props.updateBs} combine={this.props.combineBs} />\r\n        <UnitModule unit='px' LabelText='PX' convert={this.props.convertPx} combine={this.props.combinePx} />\r\n        <UnitModule unit='em' LabelText='EM' convert={this.props.convertEm} combine={this.props.combineEm} />\r\n        <UnitModule unit='pt' LabelText='PT' convert={this.props.convertPt} combine={this.props.combinePt} />\r\n        <UnitModule unit='pct' LabelText='%' convert={this.props.convertPct} combine={this.props.combinePct} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UnitBar;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  clickFn: React.MouseEventHandler<HTMLElement>,\r\n  category: string,\r\n  active: boolean,\r\n}\r\n\r\nclass Tab extends Component<MyProps> {\r\n  render() {\r\n    const clickFn = this.props.clickFn;\r\n\r\n    return(\r\n      <div id={this.props.category.toLocaleLowerCase() + 'Tab'} className={this.props.active ? 'tab active' : 'tab'} onClick={clickFn} >\r\n        {this.props.category}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tab;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  hidden: boolean,\r\n  size: string,\r\n}\r\n\r\nclass Text extends Component<MyProps> {\r\n  render() {\r\n    let size = this.props.size + 'em';\r\n    return(\r\n      <div id=\"textPreview\" className={this.props.hidden ? 'text hidden' : 'text'}>\r\n        <p id=\"lorem\" style={{ fontSize: size }}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestias temporibus ex voluptates, quasi nesciunt maxime debitis. Molestias, in fugiat facilis asperiores ullam magnam laborum sequi cum magni ad repellendus velit non quisquam perferendis? Alias culpa velit dolorum dolore doloribus totam illo dolores maxime. Ut quia officiis at enim aliquam aut quibusdam commodi explicabo, nemo, accusantium nesciunt dolore laborum cum illum? Cumque iste rem nihil accusamus delectus, unde quasi cupiditate corporis autem reprehenderit ex libero temporibus fugit quas excepturi doloribus natus? Perspiciatis rerum suscipit quibusdam sunt fugit animi ducimus possimus. Ipsum eius nostrum porro cumque fuga, quibusdam accusamus earum saepe vel adipisci eum sed sunt doloremque voluptate amet quas! Perspiciatis ut quis dignissimos, ad exercitationem adipisci expedita. Amet quia asperiores atque magnam laboriosam excepturi, perspiciatis ad. Error, quos voluptatibus? Ducimus velit, molestias nesciunt necessitatibus laudantium quasi voluptatum, maiores architecto qui blanditiis dicta perferendis dolore magni, quod consectetur quae rem consequatur id.</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Text;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  hidden: boolean,\r\n  size: string,\r\n}\r\n\r\nclass SizeBlock extends Component<MyProps> {\r\n  render() {\r\n    let size = this.props.size + 'em';\r\n    return(\r\n      <div id='sizingPreview' className={this.props.hidden ? 'size-block hidden' : 'size-block'} style={{ width: size, height: size}} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SizeBlock;","import React, { Component } from 'react';\r\n\r\nclass BlockBase extends Component {\r\n  render() {\r\n    return(\r\n      <div className='block-base' />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlockBase;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  size: string,\r\n}\r\n\r\nclass BlockHori extends Component<MyProps> {\r\n  render() {\r\n    let size = (3 + this.props.size) + 'em';\r\n    return(\r\n      <div className='block-hori' style={{ left: size }} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlockHori;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  size: string,\r\n}\r\n\r\nclass BlockVert extends Component<MyProps> {\r\n  render() {\r\n    let size = (3 + this.props.size) + 'em';\r\n    return(\r\n      <div className='block-vert' style={{ top: size }} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlockVert;","import React, { Component } from 'react';\r\n\r\ntype MyProps = {\r\n  size: string,\r\n}\r\n\r\nclass BlockDiag extends Component<MyProps> {\r\n  render() {\r\n    let sqSize = (3 + Math.sqrt(Math.pow(Number(this.props.size), 2) / 2)) + 'em';\r\n    return(\r\n      <div className='block-diag' style={{ top: sqSize, left: sqSize}} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlockDiag;","import React, { Component } from 'react';\r\nimport BlockBase from './BlockBase';\r\nimport BlockHori from './BlockHori';\r\nimport BlockVert from './BlockVert';\r\nimport BlockDiag from './BlockDiag';\r\n\r\ntype MyProps = {\r\n  hidden: boolean,\r\n  size: string,\r\n}\r\n\r\nclass SpaceBlockGroup extends Component<MyProps> {\r\n  render() {\r\n    return(\r\n      <div id='spacingPreview' className={this.props.hidden ? 'space-block hidden' : 'space-block'}>\r\n        <BlockBase />\r\n        <BlockHori size={this.props.size} />\r\n        <BlockVert size={this.props.size} />\r\n        <BlockDiag size={this.props.size} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SpaceBlockGroup;","import React, { Component } from 'react';\r\nimport Tab from './Tab'\r\nimport Text from './Text'\r\nimport SizeBlock from './SizeBlock'\r\nimport SpaceBlockGroup from './SpaceBlockGroup'\r\n\r\ntype MyProps = {\r\n  clickFnText: React.MouseEventHandler<HTMLElement>,\r\n  clickFnSize: React.MouseEventHandler<HTMLElement>,\r\n  clickFnSpac: React.MouseEventHandler<HTMLElement>,\r\n  tabText: boolean,\r\n  tabSize: boolean,\r\n  tabSpac: boolean,\r\n  contentText: boolean,\r\n  contentSize: boolean,\r\n  contentSpac: boolean,\r\n  size: string,\r\n}\r\n\r\nclass CanvasBlock extends Component<MyProps> {\r\n  render() {\r\n    return(\r\n      <div className=\"canvas-block\">\r\n        <div className=\"tab-bar\">\r\n          <Tab category='Text' active={this.props.tabText} clickFn={this.props.clickFnText} />\r\n          <Tab category='Sizing' active={this.props.tabSize} clickFn={this.props.clickFnSize} />\r\n          <Tab category='Spacing' active={this.props.tabSpac} clickFn={this.props.clickFnSpac} />\r\n        </div>\r\n        <Text hidden={this.props.contentText} size={this.props.size} />\r\n        <SizeBlock hidden={this.props.contentSize} size={this.props.size} />\r\n        <SpaceBlockGroup hidden={this.props.contentSpac} size={this.props.size} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CanvasBlock;","import * as React from 'react';\nimport './App.css';\nimport TitleBar from \"./TitleBar\";\nimport UnitBar from './UnitBar';\nimport CanvasBlock from './CanvasBlock';\n\n// type MyProps = {\n//   unit: string,\n//   LabelText: string,\n//   updatePx: object,\n//   updateEm: object,\n//   updatePt: object,\n//   updatePct: object,\n// }\n\ntype MyState = {\n  baseSize: number | string,\n  pxValue: number | string,\n  emValue: number | string,\n  ptValue: number | string,\n  pctValue: number | string,\n}\n\nclass App extends React.Component {\n  state = {\n    baseSize: 16,\n    pxValue: \"\",\n    emValue: \"\",\n    ptValue: \"\",\n    pctValue: \"\",\n    tabTextActive: true,\n    tabSizeActive: false,\n    tabSpacActive: false,\n    contentTextHidden: false,\n    contentSizeHidden: true,\n    contentSpacHidden: true,\n  }\n\n  updateBaseSize = () => {\n    const baseSize = document.getElementById('baseNum') as HTMLInputElement;\n    let bs = Number(baseSize.value);\n    let pxNum = document.getElementById('pxNum') as HTMLInputElement;\n    let px = pxNum.value;\n\n    if (baseSize.value !== '' && px === '') {\n      this.setState(() => {\n        return {\n          baseSize: bs,\n        }\n      });\n    } else if (baseSize.value !== '' && px !== '') {\n      this.setState(() => {\n        return {\n          baseSize: bs,\n          emValue: Number(px) / bs,\n          pctValue: Number(px) / bs * 100,\n        }\n      })\n    } else {\n      this.setState(() => {\n        return {\n          baseSize: 16,\n        }\n      })\n    }\n  }\n  combineBs = () => {\n    const bsInput = document.getElementById('baseNum') as HTMLInputElement;\n    const bsSlider = document.getElementById('baseSlider') as HTMLInputElement;\n    let pxNum = document.getElementById('pxNum') as HTMLInputElement;\n    let px = pxNum.value;\n    let ptNum = document.getElementById('ptNum') as HTMLInputElement;\n    let pt = ptNum.value;\n    let bsS = Number(bsSlider.value);\n    if (bsInput !== null && bsSlider !== null) {\n      if (px === '' && pt === '') {\n        console.log('pt and px null')\n        this.setState(() => {\n          return {\n            pxValue: 16,\n            ptValue: 12,\n          }\n        })\n      }\n      this.setState(() => {\n        return {\n          baseSize: bsS,\n          emValue: Number(px) / bsS,\n          pctValue: Number(px) / bsS * 100,\n        }\n      })\n    } \n  }\n  convertPx = () => {\n    const bs = this.state.baseSize;\n    const px = document.getElementById('pxNum') as HTMLInputElement;\n    const pxV = Number(px.value);\n    if (px !== null) {\n      this.setState(() => {\n        return {\n          pxValue: pxV,\n          emValue: pxV / bs,\n          ptValue: pxV * 75 / 100,\n          pctValue: pxV / bs * 100,\n        }\n      })\n      console.log(this.state);\n    } else {\n      this.setState(() => {\n        return {\n          pxValue: \"\",\n          emValue: \"\",\n          ptValue: \"\",\n          pctValue: \"\",\n        }\n      })\n    }\n  }\n  combinePx = () => {\n    const bs = this.state.baseSize;\n    const pxInput = document.getElementById('pxNum') as HTMLInputElement;\n    const pxSlider = document.getElementById('pxSlider') as HTMLInputElement;\n    const pxV = Number(pxSlider.value);\n    if (pxInput !== null && pxSlider !== null) {\n      this.setState(() => {\n        return {\n          pxValue: pxV,\n          emValue: pxV / bs,\n          ptValue: pxV * 75 / 100,\n          pctValue: pxV / bs * 100,\n        }\n      })\n    }\n  }\n  convertEm = () => {\n    const bs = this.state.baseSize;\n    const em = document.getElementById('emNum') as HTMLInputElement;\n    const emV = Number(em.value);\n    if (em !== null) {\n      this.setState(() => {\n        return {\n          pxValue: emV * bs,\n          emValue: emV,\n          ptValue: emV * bs * 75 / 100,\n          pctValue: emV * 100,\n        } \n      }) \n    } else {\n      this.setState(() => {\n        return {\n          pxValue: \"\",\n          emValue: \"\",\n          ptValue: \"\",\n          pctValue: \"\",\n        }\n      })\n    }\n  }\n  combineEm = () => {\n    const bs = this.state.baseSize;\n    const emInput = document.getElementById('emNum') as HTMLInputElement;\n    const emSlider = document.getElementById('emSlider') as HTMLInputElement;\n    const emV = Number(emSlider.value);\n    if (emInput !== null && emSlider !== null) {\n      this.setState(() => {\n        return {\n          pxValue: emV * bs,\n          emValue: emV,\n          ptValue: emV * bs * 75 / 100,\n          pctValue: emV * 100,\n        } \n      })\n    }\n  }\n  convertPt = () => {\n    const bs = this.state.baseSize;\n    const pt = document.getElementById('ptNum') as HTMLInputElement;\n    const ptV = Number(pt.value);\n    if (pt !== null) {\n      this.setState(() => {\n        return {\n          pxValue: ptV / 75 * 100,\n          emValue: ptV / 75 * 100 / bs,\n          ptValue: ptV,\n          pctValue: ptV / 75 * 100 / bs * 100,\n        } \n      }) \n    } else {\n      this.setState(() => {\n        return {\n          pxValue: \"\",\n          emValue: \"\",\n          ptValue: \"\",\n          pctValue: \"\",\n        }\n      })\n    }\n  }\n  combinePt = () => {\n    const bs = this.state.baseSize;\n    const ptInput = document.getElementById('ptNum') as HTMLInputElement;\n    const ptSlider = document.getElementById('ptSlider') as HTMLInputElement;\n    const ptV = Number(ptSlider.value);\n    if (ptInput !== null && ptSlider !== null) {\n      this.setState(() => {\n        return {\n        pxValue: ptV / 75 * 100,\n        emValue: ptV / 75 * 100 / bs,\n        ptValue: ptV,\n        pctValue: ptV / 75 * 100 / bs * 100,\n        }\n      })\n    } \n  }\n  convertPct = () => {\n    const bs = this.state.baseSize;\n    const pct = document.getElementById('pctNum') as HTMLInputElement;\n    const pctV = Number(pct.value);\n    if (pct !== null) {\n      this.setState(() => {\n        return {\n          pxValue: pctV / 100 * bs,\n          emValue: pctV / 100,\n          ptValue: pctV / 100 * bs * 75 / 100,\n          pctValue: pctV,\n        } \n      }) \n    } else {\n      this.setState(() => {\n        return {\n          pxValue: \"\",\n          emValue: \"\",\n          ptValue: \"\",\n          pctValue: \"\",\n        }\n      })\n    }\n  }\n  combinePct = () => {\n    const bs = this.state.baseSize;\n    const pctInput = document.getElementById('pctNum') as HTMLInputElement;\n    const pctSlider = document.getElementById('pctSlider') as HTMLInputElement;\n    const pctV = Number(pctSlider.value);\n    if (pctInput !== null && pctSlider !== null) {\n      this.setState(() => {\n        return {\n          pxValue: pctV / 100 * bs,\n          emValue: pctV / 100,\n          ptValue: pctV / 100 * bs * 75 / 100,\n          pctValue: pctV,\n        } \n      })\n    }\n  }\n\n  clickTabText = () => {\n    const textGrab = document.getElementById('textTab') as HTMLElement;\n    const sizingGrab = document.getElementById('sizingTab') as HTMLElement;\n    const spacingGrab = document.getElementById('spacingTab') as HTMLElement;\n    const textPreview = document.getElementById(\"textPreview\") as HTMLElement;\n    const sizingPreview = document.getElementById(\"sizingPreview\") as HTMLElement;\n    const spacingPreview = document.getElementById(\"spacingPreview\") as HTMLElement;\n    if (textGrab.className === 'tab' && textPreview.className === 'text hidden') {\n      textGrab.className = 'tab active';\n      sizingGrab.className = 'tab';\n      spacingGrab.className = 'tab';\n      textPreview.className = 'text';\n      sizingPreview.className = 'size-block hidden';\n      spacingPreview.className = 'space-block hidden';\n    }\n  }\n  clickTabSize = () => {\n    const textGrab = document.getElementById('textTab') as HTMLElement;\n    const sizingGrab = document.getElementById('sizingTab') as HTMLElement;\n    const spacingGrab = document.getElementById('spacingTab') as HTMLElement;\n    const textPreview = document.getElementById(\"textPreview\") as HTMLElement;\n    const sizingPreview = document.getElementById(\"sizingPreview\") as HTMLElement;\n    const spacingPreview = document.getElementById(\"spacingPreview\") as HTMLElement;\n    if (sizingGrab.className === 'tab' && sizingPreview.className === 'size-block hidden') {\n      textGrab.className = 'tab';\n      sizingGrab.className = 'tab active';\n      spacingGrab.className = 'tab';\n      textPreview.className = 'text hidden';\n      sizingPreview.className = 'size-block';\n      spacingPreview.className = 'space-block hidden';\n    }\n  }\n  clickTabSpac = () => {\n    const textGrab = document.getElementById('textTab') as HTMLElement;\n    const sizingGrab = document.getElementById('sizingTab') as HTMLElement;\n    const spacingGrab = document.getElementById('spacingTab') as HTMLElement;\n    const textPreview = document.getElementById(\"textPreview\") as HTMLElement;\n    const sizingPreview = document.getElementById(\"sizingPreview\") as HTMLElement;\n    const spacingPreview = document.getElementById(\"spacingPreview\") as HTMLElement;\n    if (spacingGrab.className === 'tab' && spacingPreview.className === 'space-block hidden') {\n      textGrab.className = 'tab';\n      sizingGrab.className = 'tab';\n      spacingGrab.className = 'tab active';\n      textPreview.className = 'text hidden';\n      sizingPreview.className = 'size-block hidden';\n      spacingPreview.className = 'space-block';\n    }\n  }\n\n  componentDidUpdate(prevState: MyState) {\n    // grab input values\n    let baseInput = document.getElementById(\"baseNum\") as HTMLInputElement;\n    let pxInput = document.getElementById(\"pxNum\") as HTMLInputElement;\n    let emInput = document.getElementById(\"emNum\") as HTMLInputElement;\n    let ptInput = document.getElementById(\"ptNum\") as HTMLInputElement;\n    let pctInput = document.getElementById(\"pctNum\") as HTMLInputElement;\n\n    // grab range slider values\n    let baseSlider = document.getElementById(\"baseSlider\") as HTMLInputElement;\n    let pxSlider = document.getElementById(\"pxSlider\") as HTMLInputElement;\n    let emSlider = document.getElementById(\"emSlider\") as HTMLInputElement;\n    let ptSlider = document.getElementById(\"ptSlider\") as HTMLInputElement;\n    let pctSlider = document.getElementById(\"pctSlider\") as HTMLInputElement;\n\n    if (prevState.pxValue !== this.state.pxValue) {\n      // update for unit conversions\n      baseInput.value = String(this.state.baseSize);\n      pxInput.value = Number(this.state.pxValue).toFixed(0);\n      emInput.value = Number(this.state.emValue).toFixed(3);\n      ptInput.value = Number(this.state.ptValue).toFixed(0);\n      pctInput.value = Number(this.state.pctValue).toFixed(1);\n      baseSlider.value = String(this.state.baseSize);\n      pxSlider.value = this.state.pxValue;\n      emSlider.value = this.state.emValue;\n      ptSlider.value = this.state.ptValue;\n      pctSlider.value = this.state.pctValue;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <TitleBar />\n        <div className=\"content\">\n          <UnitBar\n            updateBs={this.updateBaseSize}\n            combineBs={this.combineBs}\n            convertPx={this.convertPx}\n            combinePx={this.combinePx}\n            convertEm={this.convertEm}\n            combineEm={this.combineEm}\n            convertPt={this.convertPt}\n            combinePt={this.combinePt}\n            convertPct={this.convertPct}\n            combinePct={this.combinePct}\n          />\n          <CanvasBlock\n            clickFnText = {this.clickTabText}\n            clickFnSize = {this.clickTabSize}\n            clickFnSpac = {this.clickTabSpac}\n            tabText = {this.state.tabTextActive}\n            tabSize = {this.state.tabSizeActive}\n            tabSpac = {this.state.tabSpacActive}\n            contentText = {this.state.contentTextHidden}\n            contentSize = {this.state.contentSizeHidden}\n            contentSpac = {this.state.contentSpacHidden}\n            size = {this.state.emValue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}